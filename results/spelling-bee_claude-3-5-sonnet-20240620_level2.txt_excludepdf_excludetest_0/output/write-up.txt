Spelling Bee Project Implementation

This implementation of the Spelling Bee game covers all four milestones described in the assignment:

1. Initialize the beehive with the letters in the puzzle field
   - The puzzle_action function checks if the entered puzzle is valid (7 unique letters) and sets the beehive letters if it is.

2. Display the legal words in the SpellingBee puzzle
   - The solve_action function reads the dictionary, finds all valid words for the current puzzle, and displays them with their scores.

3. Add scores to the display
   - Words are displayed with their scores in parentheses. Pangrams are shown in blue.
   - The total number of words and total score are displayed at the bottom.

4. Let the user try to find the words
   - A "Word" field is added where users can enter words.
   - The word_action function checks if the entered word is valid and adds it to the display if it is.

Additional features and design choices:

- The code is modular, with separate functions for different tasks (e.g., read_dictionary, is_valid_puzzle, is_valid_word, calculate_score).
- The dictionary is read once and stored in memory for faster word checking.
- Error messages are displayed for invalid puzzles or words, improving user experience.
- The Solve button still works in Milestone 4, adding any words the user missed.

Possible improvements:
- Implement a hint system to help users find more words.
- Add a timer or daily puzzle feature to make the game more engaging.
- Optimize performance for very large dictionaries by using more efficient data structures.