This implementation follows the requirements of the assignment:

1. Command-line argument handling: The program checks for the correct number of arguments and uses sys.argv[1] as the filename.

2. Error checking: The program handles FileNotFoundError when trying to open the input file.

3. Data storage: The food web is stored in a dictionary where keys are predators and values are lists of prey.

4. Single file read: The file is only read once in the load_food_web function.

5. File closing: The file is opened using a 'with' statement, ensuring it's properly closed.

6. Function usage: The program is divided into appropriate functions for each part of the analysis.

7. Code organization: All code is within function definitions except for imports and the main function call.

8. No nested functions: All functions are defined at the top level.

9. No global variables: Data is passed between functions using parameters and return values.

10. Assumes correct file format: The program doesn't check for data format issues within the file.

11. Style: The code uses appropriate variable names, includes comments, and follows good Python style guidelines.

12. No use of break or continue: The implementation avoids these statements as required.

This implementation should correctly process all the provided food web files and produce output matching the expected format for each part of the analysis.