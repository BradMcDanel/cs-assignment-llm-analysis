# Enigma Machine Simulation Write-up

This project involves creating a simulation of the Enigma machine by implementing the model component in a Model-View-Controller architecture. The Enigma machine, used during World War II for encrypting messages, was a complex device involving multiple rotors and a reflector, each contributing to the encryption process.

The simulation was divided into six milestones, each building incrementally on the previous. Below is a summary of the milestones:

1. **Activate the Keyboard**: Implemented a mechanism to track the state of each key using a dictionary.
2. **Connect the Keys Directly to the Lamps**: Linked each key press to light up a corresponding lamp directly.
3. **Design and Implement the Rotor Data Structure**: Developed an `EnigmaRotor` class to model the rotors, storing permutation and offset.
4. **Implement One Stage in the Encryption**: Implemented a function to apply a rotor's permutation to simulate the first stage of encryption.
5. **Implement the Full Encryption Path**: Extended the encryption path through all rotors and the reflector, including both forward and backward paths.
6. **Implement the Rotor Advance on Pressing a Key**: Added a mechanism to advance the rotors upon each key press, propagating carries to adjacent rotors.

The simulation successfully mimics the functionality of the original Enigma machine, providing a dynamic encryption mechanism with each key press. This project not only highlights the intricacies of historical encryption techniques but also emphasizes the importance of clear structuring in software design through the MVC pattern.