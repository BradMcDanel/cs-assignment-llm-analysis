{
    "created": 1731001989.1127908,
    "duration": 0.23766589164733887,
    "exitcode": 1,
    "root": "/tmp/code_8vk7job6",
    "environment": {},
    "summary": {
        "passed": 5,
        "failed": 5,
        "total": 10,
        "collected": 10
    },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_SpellingBee.py",
                    "type": "Module"
                }
            ]
        },
        {
            "nodeid": "test_SpellingBee.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_SpellingBee.py::test_puzzle_initialization",
                    "type": "Function",
                    "lineno": 47
                },
                {
                    "nodeid": "test_SpellingBee.py::test_invalid_puzzle_length",
                    "type": "Function",
                    "lineno": 52
                },
                {
                    "nodeid": "test_SpellingBee.py::test_invalid_puzzle_duplicates",
                    "type": "Function",
                    "lineno": 57
                },
                {
                    "nodeid": "test_SpellingBee.py::test_solve_action",
                    "type": "Function",
                    "lineno": 62
                },
                {
                    "nodeid": "test_SpellingBee.py::test_word_entry_valid",
                    "type": "Function",
                    "lineno": 69
                },
                {
                    "nodeid": "test_SpellingBee.py::test_word_entry_invalid",
                    "type": "Function",
                    "lineno": 77
                },
                {
                    "nodeid": "test_SpellingBee.py::test_pangram_identification",
                    "type": "Function",
                    "lineno": 84
                },
                {
                    "nodeid": "test_SpellingBee.py::test_score_calculation",
                    "type": "Function",
                    "lineno": 89
                },
                {
                    "nodeid": "test_SpellingBee.py::test_duplicate_word_entry",
                    "type": "Function",
                    "lineno": 96
                },
                {
                    "nodeid": "test_SpellingBee.py::test_solve_after_user_input",
                    "type": "Function",
                    "lineno": 104
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "test_SpellingBee.py::test_puzzle_initialization",
            "lineno": 47,
            "outcome": "passed",
            "keywords": [
                "test_puzzle_initialization",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.017284232890233397,
                "outcome": "passed"
            },
            "call": {
                "duration": 9.558815509080887e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.648603059351444e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_invalid_puzzle_length",
            "lineno": 52,
            "outcome": "passed",
            "keywords": [
                "test_invalid_puzzle_length",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.014887278201058507,
                "outcome": "passed"
            },
            "call": {
                "duration": 7.829093374311924e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.247412577271461e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_invalid_puzzle_duplicates",
            "lineno": 57,
            "outcome": "passed",
            "keywords": [
                "test_invalid_puzzle_duplicates",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.014983999077230692,
                "outcome": "passed"
            },
            "call": {
                "duration": 9.060394950211048e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.093511521816254e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_solve_action",
            "lineno": 62,
            "outcome": "failed",
            "keywords": [
                "test_solve_action",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.014990700175985694,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0001635949593037367,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_8vk7job6/test_SpellingBee.py",
                    "lineno": 66,
                    "message": "assert 0 > 0\n +  where 0 = len([])\n +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad9a5c0760>.words"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 66,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad9a5c0760>\n\n    def test_solve_action(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.solve_callback(\"Solve\")\n>       assert len(mock_graphics.words) > 0\nE       assert 0 > 0\nE        +  where 0 = len([])\nE        +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad9a5c0760>.words\n\ntest_SpellingBee.py:66: AssertionError"
            },
            "teardown": {
                "duration": 0.00015735509805381298,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_word_entry_valid",
            "lineno": 69,
            "outcome": "failed",
            "keywords": [
                "test_word_entry_valid",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.013632098911330104,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0001610380131751299,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_8vk7job6/test_SpellingBee.py",
                    "lineno": 74,
                    "message": "assert 0 > 0\n +  where 0 = len([])\n +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d39ed0>.words"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 74,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d39ed0>\n\n    def test_word_entry_valid(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        initial_word_count = len(mock_graphics.words)\n        mock_graphics.word_callback(\"excel\")\n>       assert len(mock_graphics.words) > initial_word_count\nE       assert 0 > 0\nE        +  where 0 = len([])\nE        +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d39ed0>.words\n\ntest_SpellingBee.py:74: AssertionError"
            },
            "teardown": {
                "duration": 9.907316416501999e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_word_entry_invalid",
            "lineno": 77,
            "outcome": "passed",
            "keywords": [
                "test_word_entry_invalid",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.014188060071319342,
                "outcome": "passed"
            },
            "call": {
                "duration": 8.883979171514511e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 6.973184645175934e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_pangram_identification",
            "lineno": 84,
            "outcome": "failed",
            "keywords": [
                "test_pangram_identification",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.014082807814702392,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00012869318015873432,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_8vk7job6/test_SpellingBee.py",
                    "lineno": 88,
                    "message": "assert False\n +  where False = any(<generator object test_pangram_identification.<locals>.<genexpr> at 0x7dad9790e8f0>)"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 88,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d81420>\n\n    def test_pangram_identification(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.word_callback(\"excellently\")\n>       assert any(\"excellently\" in word[0].lower() and word[1] == \"Blue\" for word in mock_graphics.words)\nE       assert False\nE        +  where False = any(<generator object test_pangram_identification.<locals>.<genexpr> at 0x7dad9790e8f0>)\n\ntest_SpellingBee.py:88: AssertionError"
            },
            "teardown": {
                "duration": 0.000147881917655468,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_score_calculation",
            "lineno": 89,
            "outcome": "failed",
            "keywords": [
                "test_score_calculation",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.013151763938367367,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0001396669540554285,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_8vk7job6/test_SpellingBee.py",
                    "lineno": 94,
                    "message": "assert False\n +  where False = any(<generator object test_score_calculation.<locals>.<genexpr> at 0x7dad9790ee30>)"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 94,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d38ee0>\n\n    def test_score_calculation(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.word_callback(\"excel\")\n        mock_graphics.word_callback(\"excellently\")\n>       assert any(\"(\" in word[0] for word in mock_graphics.words)  # Check for score display\nE       assert False\nE        +  where False = any(<generator object test_score_calculation.<locals>.<genexpr> at 0x7dad9790ee30>)\n\ntest_SpellingBee.py:94: AssertionError"
            },
            "teardown": {
                "duration": 0.00011214683763682842,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_duplicate_word_entry",
            "lineno": 96,
            "outcome": "passed",
            "keywords": [
                "test_duplicate_word_entry",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.013912366004660726,
                "outcome": "passed"
            },
            "call": {
                "duration": 8.526397868990898e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.324200123548508e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_solve_after_user_input",
            "lineno": 104,
            "outcome": "failed",
            "keywords": [
                "test_solve_after_user_input",
                "test_SpellingBee.py",
                "code_8vk7job6"
            ],
            "setup": {
                "duration": 0.013934259070083499,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00014210492372512817,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_8vk7job6/test_SpellingBee.py",
                    "lineno": 110,
                    "message": "assert 0 > 0\n +  where 0 = len([])\n +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d83580>.words"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 110,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d83580>\n\n    def test_solve_after_user_input(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.word_callback(\"excel\")\n        initial_word_count = len(mock_graphics.words)\n        mock_graphics.solve_callback(\"Solve\")\n>       assert len(mock_graphics.words) > initial_word_count\nE       assert 0 > 0\nE        +  where 0 = len([])\nE        +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7dad99d83580>.words\n\ntest_SpellingBee.py:110: AssertionError"
            },
            "teardown": {
                "duration": 0.00014155404642224312,
                "outcome": "passed"
            }
        }
    ]
}