{
    "created": 1731002399.511165,
    "duration": 0.2405552864074707,
    "exitcode": 1,
    "root": "/tmp/code_ts3s7epj",
    "environment": {},
    "summary": {
        "failed": 6,
        "passed": 4,
        "total": 10,
        "collected": 10
    },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_SpellingBee.py",
                    "type": "Module"
                }
            ]
        },
        {
            "nodeid": "test_SpellingBee.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_SpellingBee.py::test_puzzle_initialization",
                    "type": "Function",
                    "lineno": 47
                },
                {
                    "nodeid": "test_SpellingBee.py::test_invalid_puzzle_length",
                    "type": "Function",
                    "lineno": 52
                },
                {
                    "nodeid": "test_SpellingBee.py::test_invalid_puzzle_duplicates",
                    "type": "Function",
                    "lineno": 57
                },
                {
                    "nodeid": "test_SpellingBee.py::test_solve_action",
                    "type": "Function",
                    "lineno": 62
                },
                {
                    "nodeid": "test_SpellingBee.py::test_word_entry_valid",
                    "type": "Function",
                    "lineno": 69
                },
                {
                    "nodeid": "test_SpellingBee.py::test_word_entry_invalid",
                    "type": "Function",
                    "lineno": 77
                },
                {
                    "nodeid": "test_SpellingBee.py::test_pangram_identification",
                    "type": "Function",
                    "lineno": 84
                },
                {
                    "nodeid": "test_SpellingBee.py::test_score_calculation",
                    "type": "Function",
                    "lineno": 89
                },
                {
                    "nodeid": "test_SpellingBee.py::test_duplicate_word_entry",
                    "type": "Function",
                    "lineno": 96
                },
                {
                    "nodeid": "test_SpellingBee.py::test_solve_after_user_input",
                    "type": "Function",
                    "lineno": 104
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "test_SpellingBee.py::test_puzzle_initialization",
            "lineno": 47,
            "outcome": "failed",
            "keywords": [
                "test_puzzle_initialization",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.018014164874330163,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.0002142549492418766,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_ts3s7epj/test_SpellingBee.py",
                    "lineno": 50,
                    "message": "AssertionError: assert 'abcdefg' == 'ABCDEFG'\n  - ABCDEFG\n  + abcdefg"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 50,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a7830946320>\n\n    def test_puzzle_initialization(mock_graphics):\n        mock_graphics.puzzle_callback(\"ABCDEFG\")\n>       assert mock_graphics.get_beehive_letters() == \"ABCDEFG\"\nE       AssertionError: assert 'abcdefg' == 'ABCDEFG'\nE         - ABCDEFG\nE         + abcdefg\n\ntest_SpellingBee.py:50: AssertionError"
            },
            "teardown": {
                "duration": 0.00012078694999217987,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_invalid_puzzle_length",
            "lineno": 52,
            "outcome": "passed",
            "keywords": [
                "test_invalid_puzzle_length",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.014998227125033736,
                "outcome": "passed"
            },
            "call": {
                "duration": 8.353404700756073e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.098703645169735e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_invalid_puzzle_duplicates",
            "lineno": 57,
            "outcome": "passed",
            "keywords": [
                "test_invalid_puzzle_duplicates",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.015000764979049563,
                "outcome": "passed"
            },
            "call": {
                "duration": 8.261785842478275e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 6.84000551700592e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_solve_action",
            "lineno": 62,
            "outcome": "failed",
            "keywords": [
                "test_solve_action",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.014858332928270102,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00015187496319413185,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_ts3s7epj/test_SpellingBee.py",
                    "lineno": 66,
                    "message": "assert 0 > 0\n +  where 0 = len([])\n +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a783083a0e0>.words"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 66,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a783083a0e0>\n\n    def test_solve_action(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.solve_callback(\"Solve\")\n>       assert len(mock_graphics.words) > 0\nE       assert 0 > 0\nE        +  where 0 = len([])\nE        +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a783083a0e0>.words\n\ntest_SpellingBee.py:66: AssertionError"
            },
            "teardown": {
                "duration": 0.00018377788364887238,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_word_entry_valid",
            "lineno": 69,
            "outcome": "failed",
            "keywords": [
                "test_word_entry_valid",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.01365341991186142,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00016715307720005512,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_ts3s7epj/test_SpellingBee.py",
                    "lineno": 74,
                    "message": "assert 0 > 0\n +  where 0 = len([])\n +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a7830945270>.words"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 74,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a7830945270>\n\n    def test_word_entry_valid(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        initial_word_count = len(mock_graphics.words)\n        mock_graphics.word_callback(\"excel\")\n>       assert len(mock_graphics.words) > initial_word_count\nE       assert 0 > 0\nE        +  where 0 = len([])\nE        +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a7830945270>.words\n\ntest_SpellingBee.py:74: AssertionError"
            },
            "teardown": {
                "duration": 0.00011984794400632381,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_word_entry_invalid",
            "lineno": 77,
            "outcome": "passed",
            "keywords": [
                "test_word_entry_invalid",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.014248078921809793,
                "outcome": "passed"
            },
            "call": {
                "duration": 8.904212154448032e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.207202725112438e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_pangram_identification",
            "lineno": 84,
            "outcome": "failed",
            "keywords": [
                "test_pangram_identification",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.014830155996605754,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00012491107918322086,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_ts3s7epj/test_SpellingBee.py",
                    "lineno": 88,
                    "message": "assert False\n +  where False = any(<generator object test_pangram_identification.<locals>.<genexpr> at 0x7a782fc3af80>)"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 88,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a78308390c0>\n\n    def test_pangram_identification(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.word_callback(\"excellently\")\n>       assert any(\"excellently\" in word[0].lower() and word[1] == \"Blue\" for word in mock_graphics.words)\nE       assert False\nE        +  where False = any(<generator object test_pangram_identification.<locals>.<genexpr> at 0x7a782fc3af80>)\n\ntest_SpellingBee.py:88: AssertionError"
            },
            "teardown": {
                "duration": 0.00015988200902938843,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_score_calculation",
            "lineno": 89,
            "outcome": "failed",
            "keywords": [
                "test_score_calculation",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.013757071923464537,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00013130786828696728,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_ts3s7epj/test_SpellingBee.py",
                    "lineno": 94,
                    "message": "assert False\n +  where False = any(<generator object test_score_calculation.<locals>.<genexpr> at 0x7a782fc3ad50>)"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 94,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a78309477c0>\n\n    def test_score_calculation(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.word_callback(\"excel\")\n        mock_graphics.word_callback(\"excellently\")\n>       assert any(\"(\" in word[0] for word in mock_graphics.words)  # Check for score display\nE       assert False\nE        +  where False = any(<generator object test_score_calculation.<locals>.<genexpr> at 0x7a782fc3ad50>)\n\ntest_SpellingBee.py:94: AssertionError"
            },
            "teardown": {
                "duration": 0.00011023716069757938,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_duplicate_word_entry",
            "lineno": 96,
            "outcome": "passed",
            "keywords": [
                "test_duplicate_word_entry",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.01379770296625793,
                "outcome": "passed"
            },
            "call": {
                "duration": 7.792306132614613e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 6.930110976099968e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_SpellingBee.py::test_solve_after_user_input",
            "lineno": 104,
            "outcome": "failed",
            "keywords": [
                "test_solve_after_user_input",
                "test_SpellingBee.py",
                "code_ts3s7epj"
            ],
            "setup": {
                "duration": 0.0140730538405478,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00014770589768886566,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_ts3s7epj/test_SpellingBee.py",
                    "lineno": 110,
                    "message": "assert 0 > 0\n +  where 0 = len([])\n +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a7830883760>.words"
                },
                "traceback": [
                    {
                        "path": "test_SpellingBee.py",
                        "lineno": 110,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_graphics = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a7830883760>\n\n    def test_solve_after_user_input(mock_graphics):\n        mock_graphics.set_beehive_letters(\"LYCENTX\")\n        mock_graphics.word_callback(\"excel\")\n        initial_word_count = len(mock_graphics.words)\n        mock_graphics.solve_callback(\"Solve\")\n>       assert len(mock_graphics.words) > initial_word_count\nE       assert 0 > 0\nE        +  where 0 = len([])\nE        +    where [] = <test_SpellingBee.MockSpellingBeeGraphics object at 0x7a7830883760>.words\n\ntest_SpellingBee.py:110: AssertionError"
            },
            "teardown": {
                "duration": 0.00015252712182700634,
                "outcome": "passed"
            }
        }
    ]
}