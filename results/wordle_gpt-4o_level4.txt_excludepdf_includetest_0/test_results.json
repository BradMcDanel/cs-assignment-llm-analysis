{
    "created": 1731003607.810424,
    "duration": 0.03509926795959473,
    "exitcode": 1,
    "root": "/tmp/code_01c4_goe",
    "environment": {},
    "summary": {
        "passed": 3,
        "failed": 2,
        "total": 5,
        "collected": 5
    },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_wordle.py",
                    "type": "Module"
                }
            ]
        },
        {
            "nodeid": "test_wordle.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_wordle.py::test_valid_guess",
                    "type": "Function",
                    "lineno": 111
                },
                {
                    "nodeid": "test_wordle.py::test_invalid_guess",
                    "type": "Function",
                    "lineno": 122
                },
                {
                    "nodeid": "test_wordle.py::test_correct_color_update",
                    "type": "Function",
                    "lineno": 134
                },
                {
                    "nodeid": "test_wordle.py::test_present_and_missing_color_update",
                    "type": "Function",
                    "lineno": 143
                },
                {
                    "nodeid": "test_wordle.py::test_game_over_condition",
                    "type": "Function",
                    "lineno": 156
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "test_wordle.py::test_valid_guess",
            "lineno": 111,
            "outcome": "passed",
            "keywords": [
                "test_valid_guess",
                "test_wordle.py",
                "code_01c4_goe"
            ],
            "setup": {
                "duration": 0.00038437009789049625,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00014791381545364857,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 0.0001418620813637972,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_invalid_guess",
            "lineno": 122,
            "outcome": "passed",
            "keywords": [
                "test_invalid_guess",
                "test_wordle.py",
                "code_01c4_goe"
            ],
            "setup": {
                "duration": 0.00022261496633291245,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00010112999007105827,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 8.384720422327518e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_correct_color_update",
            "lineno": 134,
            "outcome": "passed",
            "keywords": [
                "test_correct_color_update",
                "test_wordle.py",
                "code_01c4_goe"
            ],
            "setup": {
                "duration": 0.0001370788086205721,
                "outcome": "passed"
            },
            "call": {
                "duration": 6.1483820900321e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.19351228326559e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_present_and_missing_color_update",
            "lineno": 143,
            "outcome": "failed",
            "keywords": [
                "test_present_and_missing_color_update",
                "test_wordle.py",
                "code_01c4_goe"
            ],
            "setup": {
                "duration": 0.00011752801947295666,
                "outcome": "passed"
            },
            "call": {
                "duration": 7.313303649425507e-05,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_01c4_goe/Wordle.py",
                    "lineno": 56,
                    "message": "NameError: name 'N_ROWS' is not defined"
                },
                "traceback": [
                    {
                        "path": "test_wordle.py",
                        "lineno": 147,
                        "message": ""
                    },
                    {
                        "path": "Wordle.py",
                        "lineno": 56,
                        "message": "NameError"
                    }
                ],
                "longrepr": "mock_window = <test_wordle.MockWordleGWindow object at 0x7235cfafd480>\nset_target_word = <function set_target_word.<locals>._set_target_word at 0x7235cf9a1000>\n\n    def test_present_and_missing_color_update(mock_window, set_target_word):\n        set_target_word('apple')\n        wordle()\n>       mock_window.enter_listeners[0]('ample'.upper())\n\ntest_wordle.py:147: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nguess = 'AMPLE'\n\n    def enter_action(guess):\n        # Ensure the guess is the correct length\n        if len(guess) != len(hidden_word):\n            gw.show_message(\"The word must be five letters long.\")\n            return\n    \n        # Check if the guess is in the dictionary\n        if guess.lower() not in FIVE_LETTER_WORDS:\n            gw.show_message(\"Not in word list\")\n            return\n    \n        # Check each letter and color the boxes accordingly\n        current_row = gw.get_current_row()\n        hidden_word_letters = list(hidden_word)\n        guess_letters = list(guess)\n    \n        # First pass for correct letters\n        for i in range(len(guess_letters)):\n            if guess_letters[i] == hidden_word_letters[i]:\n                gw.set_square_color(current_row, i, CORRECT_COLOR)\n                hidden_word_letters[i] = None  # Mark this letter as used\n            else:\n                gw.set_square_color(current_row, i, MISSING_COLOR)\n    \n        # Second pass for present letters\n        for i in range(len(guess_letters)):\n            if gw.get_square_color(current_row, i) != CORRECT_COLOR:  # Not already colored\n                if guess_letters[i] in hidden_word_letters:\n                    gw.set_square_color(current_row, i, PRESENT_COLOR)\n                    hidden_word_letters[hidden_word_letters.index(guess_letters[i])] = None\n    \n        # Update keys color\n        for i in range(len(guess_letters)):\n            if gw.get_square_color(current_row, i) == CORRECT_COLOR:\n                gw.set_key_color(guess_letters[i], CORRECT_COLOR)\n            elif gw.get_square_color(current_row, i) == PRESENT_COLOR:\n                if gw.get_key_color(guess_letters[i]) != CORRECT_COLOR:\n                    gw.set_key_color(guess_letters[i], PRESENT_COLOR)\n            else:\n                if gw.get_key_color(guess_letters[i]) not in [CORRECT_COLOR, PRESENT_COLOR]:\n                    gw.set_key_color(guess_letters[i], MISSING_COLOR)\n    \n        # Check for win condition\n        if guess == hidden_word:\n            gw.show_message(\"Congratulations! You've guessed the word!\")\n        else:\n            # Move to the next row if available\n>           if current_row < N_ROWS - 1:\nE           NameError: name 'N_ROWS' is not defined\n\nWordle.py:56: NameError"
            },
            "teardown": {
                "duration": 0.00014626607298851013,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_game_over_condition",
            "lineno": 156,
            "outcome": "failed",
            "keywords": [
                "test_game_over_condition",
                "test_wordle.py",
                "code_01c4_goe"
            ],
            "setup": {
                "duration": 0.00023041106760501862,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00016468181274831295,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_01c4_goe/Wordle.py",
                    "lineno": 56,
                    "message": "NameError: name 'N_ROWS' is not defined"
                },
                "traceback": [
                    {
                        "path": "test_wordle.py",
                        "lineno": 163,
                        "message": ""
                    },
                    {
                        "path": "Wordle.py",
                        "lineno": 56,
                        "message": "NameError"
                    }
                ],
                "longrepr": "mock_window = <test_wordle.MockWordleGWindow object at 0x7235cfae73d0>\nset_target_word = <function set_target_word.<locals>._set_target_word at 0x7235cf9a12d0>\n\n    def test_game_over_condition(mock_window, set_target_word):\n        set_target_word('apple')\n        wordle()\n    \n        # Make six incorrect guesses\n        for _ in range(6):\n>           mock_window.enter_listeners[0]('wrong'.upper())\n\ntest_wordle.py:163: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nguess = 'WRONG'\n\n    def enter_action(guess):\n        # Ensure the guess is the correct length\n        if len(guess) != len(hidden_word):\n            gw.show_message(\"The word must be five letters long.\")\n            return\n    \n        # Check if the guess is in the dictionary\n        if guess.lower() not in FIVE_LETTER_WORDS:\n            gw.show_message(\"Not in word list\")\n            return\n    \n        # Check each letter and color the boxes accordingly\n        current_row = gw.get_current_row()\n        hidden_word_letters = list(hidden_word)\n        guess_letters = list(guess)\n    \n        # First pass for correct letters\n        for i in range(len(guess_letters)):\n            if guess_letters[i] == hidden_word_letters[i]:\n                gw.set_square_color(current_row, i, CORRECT_COLOR)\n                hidden_word_letters[i] = None  # Mark this letter as used\n            else:\n                gw.set_square_color(current_row, i, MISSING_COLOR)\n    \n        # Second pass for present letters\n        for i in range(len(guess_letters)):\n            if gw.get_square_color(current_row, i) != CORRECT_COLOR:  # Not already colored\n                if guess_letters[i] in hidden_word_letters:\n                    gw.set_square_color(current_row, i, PRESENT_COLOR)\n                    hidden_word_letters[hidden_word_letters.index(guess_letters[i])] = None\n    \n        # Update keys color\n        for i in range(len(guess_letters)):\n            if gw.get_square_color(current_row, i) == CORRECT_COLOR:\n                gw.set_key_color(guess_letters[i], CORRECT_COLOR)\n            elif gw.get_square_color(current_row, i) == PRESENT_COLOR:\n                if gw.get_key_color(guess_letters[i]) != CORRECT_COLOR:\n                    gw.set_key_color(guess_letters[i], PRESENT_COLOR)\n            else:\n                if gw.get_key_color(guess_letters[i]) not in [CORRECT_COLOR, PRESENT_COLOR]:\n                    gw.set_key_color(guess_letters[i], MISSING_COLOR)\n    \n        # Check for win condition\n        if guess == hidden_word:\n            gw.show_message(\"Congratulations! You've guessed the word!\")\n        else:\n            # Move to the next row if available\n>           if current_row < N_ROWS - 1:\nE           NameError: name 'N_ROWS' is not defined\n\nWordle.py:56: NameError"
            },
            "teardown": {
                "duration": 0.00010581198148429394,
                "outcome": "passed"
            }
        }
    ]
}