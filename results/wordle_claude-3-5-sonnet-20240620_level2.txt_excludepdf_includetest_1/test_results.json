{
    "created": 1731004130.5447116,
    "duration": 0.030942201614379883,
    "exitcode": 1,
    "root": "/tmp/code_shlmh1hp",
    "environment": {},
    "summary": {
        "passed": 4,
        "failed": 1,
        "total": 5,
        "collected": 5
    },
    "collectors": [
        {
            "nodeid": "",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_wordle.py",
                    "type": "Module"
                }
            ]
        },
        {
            "nodeid": "test_wordle.py",
            "outcome": "passed",
            "result": [
                {
                    "nodeid": "test_wordle.py::test_valid_guess",
                    "type": "Function",
                    "lineno": 111
                },
                {
                    "nodeid": "test_wordle.py::test_invalid_guess",
                    "type": "Function",
                    "lineno": 122
                },
                {
                    "nodeid": "test_wordle.py::test_correct_color_update",
                    "type": "Function",
                    "lineno": 134
                },
                {
                    "nodeid": "test_wordle.py::test_present_and_missing_color_update",
                    "type": "Function",
                    "lineno": 143
                },
                {
                    "nodeid": "test_wordle.py::test_game_over_condition",
                    "type": "Function",
                    "lineno": 156
                }
            ]
        }
    ],
    "tests": [
        {
            "nodeid": "test_wordle.py::test_valid_guess",
            "lineno": 111,
            "outcome": "passed",
            "keywords": [
                "test_valid_guess",
                "test_wordle.py",
                "code_shlmh1hp"
            ],
            "setup": {
                "duration": 0.0002090740017592907,
                "outcome": "passed"
            },
            "call": {
                "duration": 7.27139413356781e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 7.436401210725307e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_invalid_guess",
            "lineno": 122,
            "outcome": "passed",
            "keywords": [
                "test_invalid_guess",
                "test_wordle.py",
                "code_shlmh1hp"
            ],
            "setup": {
                "duration": 0.00011503114365041256,
                "outcome": "passed"
            },
            "call": {
                "duration": 8.640182204544544e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 6.684800609946251e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_correct_color_update",
            "lineno": 134,
            "outcome": "passed",
            "keywords": [
                "test_correct_color_update",
                "test_wordle.py",
                "code_shlmh1hp"
            ],
            "setup": {
                "duration": 0.00011179293505847454,
                "outcome": "passed"
            },
            "call": {
                "duration": 6.0715945437550545e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 6.206706166267395e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_present_and_missing_color_update",
            "lineno": 143,
            "outcome": "passed",
            "keywords": [
                "test_present_and_missing_color_update",
                "test_wordle.py",
                "code_shlmh1hp"
            ],
            "setup": {
                "duration": 0.00011520902626216412,
                "outcome": "passed"
            },
            "call": {
                "duration": 5.849008448421955e-05,
                "outcome": "passed"
            },
            "teardown": {
                "duration": 6.170501001179218e-05,
                "outcome": "passed"
            }
        },
        {
            "nodeid": "test_wordle.py::test_game_over_condition",
            "lineno": 156,
            "outcome": "failed",
            "keywords": [
                "test_game_over_condition",
                "test_wordle.py",
                "code_shlmh1hp"
            ],
            "setup": {
                "duration": 0.00011903909035027027,
                "outcome": "passed"
            },
            "call": {
                "duration": 0.00037287804298102856,
                "outcome": "failed",
                "crash": {
                    "path": "/tmp/code_shlmh1hp/test_wordle.py",
                    "lineno": 166,
                    "message": "assert 1 == 5\n +  where 1 = <bound method MockWordleGWindow.get_current_row of <test_wordle.MockWordleGWindow object at 0x70af58ffd180>>()\n +    where <bound method MockWordleGWindow.get_current_row of <test_wordle.MockWordleGWindow object at 0x70af58ffd180>> = <test_wordle.MockWordleGWindow object at 0x70af58ffd180>.get_current_row"
                },
                "traceback": [
                    {
                        "path": "test_wordle.py",
                        "lineno": 166,
                        "message": "AssertionError"
                    }
                ],
                "longrepr": "mock_window = <test_wordle.MockWordleGWindow object at 0x70af58ffd180>\nset_target_word = <function set_target_word.<locals>._set_target_word at 0x70af58edcee0>\n\n    def test_game_over_condition(mock_window, set_target_word):\n        set_target_word('apple')\n        wordle()\n    \n        # Make six incorrect guesses\n        for _ in range(6):\n            mock_window.enter_listeners[0]('wrong'.upper())\n    \n    \n>       assert mock_window.get_current_row() == 5\nE       assert 1 == 5\nE        +  where 1 = <bound method MockWordleGWindow.get_current_row of <test_wordle.MockWordleGWindow object at 0x70af58ffd180>>()\nE        +    where <bound method MockWordleGWindow.get_current_row of <test_wordle.MockWordleGWindow object at 0x70af58ffd180>> = <test_wordle.MockWordleGWindow object at 0x70af58ffd180>.get_current_row\n\ntest_wordle.py:166: AssertionError"
            },
            "teardown": {
                "duration": 0.000135728158056736,
                "outcome": "passed"
            }
        }
    ]
}